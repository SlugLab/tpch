vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /scratchNVME/tpch/monetdb-tpch/03_run/12.sql-2-uarch -command stop.
vtune: Collection detached.
vtune: Collection stopped.
vtune: Using result path `/scratchNVME/tpch/monetdb-tpch/03_run/12.sql-2-uarch'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-4058785-ares.sc' file   vtune: Executing actions 12 % Loading 'systemcollector-4058785-ares.sc' file   vtune: Executing actions 12 % Loading 'system-wide.perf' file                  vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for `sunrpc.ko'            vtune: Executing actions 19 % Resolving information for `igb.ko'               vtune: Executing actions 19 % Resolving information for `nf_nat.ko'            vtune: Executing actions 19 % Resolving information for `nf_tables.ko'         vtune: Executing actions 19 % Resolving information for `nfsv4.ko'             vtune: Executing actions 19 % Resolving information for `nfs.ko'               
vtune: Warning: Cannot locate debugging information for file `/lib/modules/5.15.0-47-generic/kernel/net/netfilter/nf_nat.ko'.
vtune: Warning: Cannot read load addresses of sections from `/sys/module/nf_nat/sections'. This may affect the correctness of symbol resolution for `/lib/modules/5.15.0-47-generic/kernel/net/netfilter/nf_nat.ko'. Make sure this directory exists and all files in this directory have read permissions.
vtune: Warning: Cannot locate debugging information for file `/lib/modules/5.15.0-47-generic/kernel/drivers/net/ethernet/intel/igb/igb.ko'.
vtune: Warning: Cannot read load addresses of sections from `/sys/module/igb/sections'. This may affect the correctness of symbol resolution for `/lib/modules/5.15.0-47-generic/kernel/drivers/net/ethernet/intel/igb/igb.ko'. Make sure this directory exists and all files in this directory have read permissions.
vtune: Warning: Cannot locate debugging information for file `/lib/modules/5.15.0-47-generic/kernel/net/sunrpc/sunrpc.ko'.
vtune: Warning: Cannot read load addresses of sections from `/sys/module/sunrpc/sections'. This may affect the correctness of symbol resolution for `/lib/modules/5.15.0-47-generic/kernel/net/sunrpc/sunrpc.ko'. Make sure this directory exists and all files in this directory have read permissions.
vtune: Warning: Cannot locate debugging information for file `/lib/modules/5.15.0-47-generic/kernel/net/netfilter/nf_tables.ko'.
vtune: Warning: Cannot read load addresses of sections from `/sys/module/nf_tables/sections'. This may affect the correctness of symbol resolution for `/lib/modules/5.15.0-47-generic/kernel/net/netfilter/nf_tables.ko'. Make sure this directory exists and all files in this directory have read permissions.
vtune: Warning: Cannot locate debugging information for file `/lib/modules/5.15.0-47-generic/kernel/fs/nfs/nfs.ko'.
vtune: Warning: Cannot read load addresses of sections from `/sys/module/nfs/sections'. This may affect the correctness of symbol resolution for `/lib/modules/5.15.0-47-generic/kernel/fs/nfs/nfs.ko'. Make sure this directory exists and all files in this directory have read permissions.
vtune: Warning: Cannot locate debugging information for file `/lib/modules/5.15.0-47-generic/kernel/fs/nfs/nfsv4.ko'.
vtune: Warning: Cannot read load addresses of sections from `/sys/module/nfsv4/sections'. This may affect the correctness of symbol resolution for `/lib/modules/5.15.0-47-generic/kernel/fs/nfs/nfsv4.ko'. Make sure this directory exists and all files in this directory have read permissions.
vtune: Executing actions 20 % Resolving information for `nfs.ko'               vtune: Executing actions 20 % Resolving information for `libc.so.6'            vtune: Executing actions 20 % Resolving information for `libmonetdb5.so.32.0.6'vtune: Executing actions 20 % Resolving information for `libbat.so.25.1.0'     vtune: Executing actions 20 % Resolving information for `nf_conntrack.ko'      
vtune: Warning: Cannot locate debugging information for file `/lib/modules/5.15.0-47-generic/kernel/net/netfilter/nf_conntrack.ko'.
vtune: Warning: Cannot read load addresses of sections from `/sys/module/nf_conntrack/sections'. This may affect the correctness of symbol resolution for `/lib/modules/5.15.0-47-generic/kernel/net/netfilter/nf_conntrack.ko'. Make sure this directory exists and all files in this directory have read permissions.
vtune: Executing actions 21 % Resolving information for `nf_conntrack.ko'      
vtune: Warning: Cannot locate file `vmlinux'.
vtune: Executing actions 21 % Resolving information for `vmlinux'              
vtune: Warning: Cannot locate debugging information for the Linux kernel. Source-level analysis will not be possible. Function-level analysis will be limited to kernel symbol tables. See the Enabling Linux Kernel Analysis topic in the product online help for instructions.
vtune: Executing actions 22 % Resolving information for `vmlinux'              vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving interrupt name information             vtune: Executing actions 26 % Resolving interrupt name information             vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 30 % Setting data model parameters                    vtune: Executing actions 30 % Precomputing frequently used data                vtune: Executing actions 30 % Precomputing frequently used data                vtune: Executing actions 31 % Precomputing frequently used data                vtune: Executing actions 32 % Precomputing frequently used data                vtune: Executing actions 33 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 36 % Updating precomputed scalar metrics              vtune: Executing actions 37 % Updating precomputed scalar metrics              vtune: Executing actions 37 % Discarding redundant overtime data               vtune: Executing actions 39 % Discarding redundant overtime data               vtune: Executing actions 39 % Saving the result                                vtune: Executing actions 41 % Saving the result                                vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 138.503s
    Clockticks: 103,188,000,000
    Instructions Retired: 163,428,000,000
    CPI Rate: 0.631
    Retiring: 36.5% of Pipeline Slots
        Light Operations: 35.2% of Pipeline Slots
        Heavy Operations: 1.3% of Pipeline Slots
            Microcode Sequencer: 1.3% of Pipeline Slots
                Assists: 0.0% of Pipeline Slots
                CISC: 1.3% of Pipeline Slots
    Front-End Bound: 15.5% of Pipeline Slots
     | Issue: A significant portion of Pipeline Slots is remaining empty due to
     | issues in the Front-End.
     | 
     | Tips:  Make sure the code working size is not too large, the code layout
     | does not require too many memory accesses per cycle to get enough
     | instructions for filling four pipeline slots, or check for microcode
     | assists.
     |
        Front-End Latency: 1.3% of Pipeline Slots
            ICache Misses: 0.0% of Clockticks
            ITLB Overhead: 0.2% of Clockticks
            Branch Resteers: 0.6% of Clockticks
            DSB Switches: 0.0% of Clockticks
            Length Changing Prefixes: 0.0% of Clockticks
            MS Switches: 0.0% of Clockticks
        Front-End Bandwidth: 14.2% of Pipeline Slots
         | This metric represents a fraction of slots during which CPU was
         | stalled due to front-end bandwidth issues, such as inefficiencies in
         | the instruction decoders or code restrictions for caching in the DSB
         | (decoded uOps cache). In such cases, the front-end typically delivers
         | a non-optimal amount of uOps to the back-end.
         |
            Front-End Bandwidth MITE: 8.8% of Pipeline Slots
             | This metric represents a fraction of cycles during which CPU was
             | stalled due to the MITE fetch pipeline issues, such as
             | inefficiencies in the instruction decoders.
             |
            Front-End Bandwidth DSB: 13.1% of Pipeline Slots
            (Info) DSB Coverage: 82.6%
    Bad Speculation: 19.6% of Pipeline Slots
     | A significant proportion of pipeline slots containing useful work are
     | being cancelled. This can be caused by mispredicting branches or by
     | machine clears. Note that this metric value may be highlighted due to
     | Branch Resteers issue.
     |
        Branch Mispredict: 0.0% of Pipeline Slots
        Machine Clears: 19.6% of Pipeline Slots
         | Issue: A significant portion of execution time is spent handling
         | machine clears.
         | 
         | Tips: See the "Memory Disambiguation" section in the Intel 64 and
         | IA-32 Architectures Optimization Reference Manual.
         |
    Back-End Bound: 28.4% of Pipeline Slots
     | A significant portion of pipeline slots are remaining empty. When
     | operations take too long in the back-end, they introduce bubbles in the
     | pipeline that ultimately cause fewer pipeline slots containing useful
     | work to be retired per cycle than the machine is capable to support. This
     | opportunity cost results in slower execution. Long-latency operations
     | like divides and memory operations can cause this, as can too many
     | operations being directed to a single execution port (for example, more
     | multiply operations arriving in the back-end per cycle than the execution
     | unit can support).
     |
        Memory Bound: 9.1% of Pipeline Slots
            L1 Bound: 1.2% of Clockticks
                DTLB Overhead: 0.0% of Clockticks
                Loads Blocked by Store Forwarding: 0.0% of Clockticks
                Lock Latency: 0.0% of Clockticks
                Split Loads: 0.0% of Clockticks
                4K Aliasing: 0.1% of Clockticks
                FB Full: 0.0% of Clockticks
            L2 Bound: 0.0% of Clockticks
            L3 Bound: 0.0% of Clockticks
                Contested Accesses: 0.0% of Clockticks
                Data Sharing: 0.0% of Clockticks
                L3 Latency: 0.0% of Clockticks
                SQ Full: 0.0% of Clockticks
            DRAM Bound: 11.8% of Clockticks
                Memory Bandwidth: 0.0% of Clockticks
                Memory Latency: 30.6% of Clockticks
                    Local DRAM: 0.0% of Clockticks
                    Remote DRAM: 0.0% of Clockticks
                    Remote Cache: 0.0% of Clockticks
            Store Bound: 6.4% of Clockticks
                Store Latency: 28.7% of Clockticks
                False Sharing: 0.0% of Clockticks
                Split Stores: 0.0% of Clockticks
                DTLB Store Overhead: 0.2% of Clockticks
        Core Bound: 19.3% of Pipeline Slots
         | This metric represents how much Core non-memory issues were of a
         | bottleneck. Shortage in hardware compute resources, or dependencies
         | software's instructions are both categorized under Core Bound. Hence
         | it may indicate the machine ran out of an OOO resources, certain
         | execution units are overloaded or dependencies in program's data- or
         | instruction- flow are limiting the performance (e.g. FP-chained long-
         | latency arithmetic operations).
         |
            Divider: 0.0% of Clockticks
            Port Utilization: 35.4% of Clockticks
             | Issue: A significant fraction of cycles was stalled due to Core
             | non-divider-related issues.
             | 
             | Tips: Use vectorization to reduce pressure on the execution ports
             | as multiple elements are calculated with same uOp.
             |
                Cycles of 0 Ports Utilized: 34.3% of Clockticks
                 | CPU executed no uOps on any execution port during a
                 | significant fraction of cycles. Long-latency instructions
                 | like divides may contribute to this issue. Check the Assembly
                 | view and Appendix C in the Optimization Guide to identify
                 | instructions with 5 or more cycles latency.
                 |
                Cycles of 1 Port Utilized: 11.3% of Clockticks
                Cycles of 2 Ports Utilized: 14.5% of Clockticks
                Cycles of 3+ Ports Utilized: 43.9% of Clockticks
                    ALU Operation Utilization: 26.4% of Clockticks
                        Port 0: 15.7% of Clockticks
                        Port 1: 29.9% of Clockticks
                        Port 5: 25.7% of Clockticks
                        Port 6: 34.2% of Clockticks
                    Load Operation Utilization: 49.2% of Clockticks
                        Port 2: 51.3% of Clockticks
                        Port 3: 45.6% of Clockticks
                    Store Operation Utilization: 19.9% of Clockticks
                        Port 4: 19.9% of Clockticks
                        Port 7: 21.3% of Clockticks
    Average CPU Frequency
    Total Thread Count: 22
    Paused Time: 0s
Effective CPU Utilization: 0.0%
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    Average Effective CPU Utilization: 0.000 out of 16
Collection and Platform Info
    Operating System: 5.15.0-47-generic DISTRIB_ID=Ubuntu DISTRIB_RELEASE=22.04 DISTRIB_CODENAME=jammy DISTRIB_DESCRIPTION="Ubuntu 22.04.1 LTS"
    Computer Name: ares
    Result Size: 29.9 MB 
    Collection start time: 08:53:22 16/09/2022 UTC
    Collection stop time: 08:55:41 16/09/2022 UTC
    Collector Type: Driverless Perf system-wide sampling
    CPU
        Name: Intel(R) Xeon(R) E5/E7 v3 Processor code named Haswell
        Frequency: 2.400 GHz
        Logical CPU Count: 16
        Cache Allocation Technology
            Level 2 capability: not detected
            Level 3 capability: not detected

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
